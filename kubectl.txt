-------------------------
Node Cordon:
-------------------------
Uncordon a node - kubectl uncordon

----------
Eviction:
----------
Eviction and Drain can cause deadlocks, in which drain will wait forever.

----------------
Drain Filters: 
----------------
Drain = Cordons the node + Evicts (Eviction API) or Deletes (Delete API) the pods

The drain command uses four different filters when checking for pods to delete, and these filters can temporarily reject the drain or the drain can move on without touching certain pods or the drain can fail:

1. DaemonSet filter: The drain command proceeds only if the --ignore-daemonsets flag is set to true, but even if that is the case, it won’t delete the pod because of the DaemonSet controller
2. Mirror pods filter: Mirror pods are visible from the API server but cannot be controlled, so drain won’t delete these either.
3. Unreplicated filter: For Bare Pods drain command lets the user decide: when --force is set, unreplicated pods will be deleted (or evicted): if they’re not set, drain will fail.
4. LocalStorage filter: if --delete-local-data is set, drain will proceed even if there are pods using the emptyDir and will delete the pods and therefore delete the local data as well.

Sample approach - Ignore DaemonSets and mirror pods, and force deletes unreplicated and emptyDir pods by default.

--------------------
Log Level kubectl:
--------------------
--v=0	Generally useful for this to always be visible to a cluster operator.
--v=1	A reasonable default log level if you don’t want verbosity.
--v=2	Useful steady state information about the service and important log messages that may correlate to significant changes in the system. This is the recommended default log level for most systems.
--v=3	Extended information about changes.
--v=4	Debug level verbosity.
--v=6	Display requested resources.
--v=7	Display HTTP request headers.
--v=8	Display HTTP request contents.
--v=9	Display HTTP request contents without truncation of contents.
